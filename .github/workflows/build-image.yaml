name: Build Image

on:
  workflow_dispatch:
    inputs:
      image-name:
        required: true

jobs:
  build_container_images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Metadata
        id: set_meta
        working-directory: "./${{ inputs.image-name }}/"
        run: |
          pwd
          echo VERSION=$(cat VERSION) >> $GITHUB_OUTPUT
          if [ -e PLATFORMS ]; then
            echo PLATFORMS=$(cat PLATFORMS | tr '\n' ',' ) >> $GITHUB_OUTPUT
          else
            echo "PLATFORMS=" >> $GITHUB_OUTPUT
          fi

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ steps.set_meta.outputs.VERSION }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          platforms: ${{steps.set_meta.outputs.PLATFORMS}}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: "${{inputs.image-name}}/"
          push: true
          pull: true
          build-args: VERSION=${{steps.set_meta.outputs.VERSION}}
          platforms: ${{steps.set_meta.outputs.PLATFORMS}}
          tags:  ${{ secrets.DOCKERHUB_USERNAME }}/${{inputs.image-name}}:${{steps.set_meta.outputs.VERSION}}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
